apply plugin: 'com.android.application'

android {
    signingConfigs {
        config {
            keyAlias 'peephole'
            keyPassword 'peephole123'
            storeFile file('H:/code/PeepholeNIM/peephole.jks')
            storePassword 'peephole123'
        }
    }
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "${APP_ID}"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // 使用Cmake工具
        externalNativeBuild {
            cmake {
                cppFlags ""
                //生成多个版本的so文件
                abiFilters "armeabi-v7a"
            }
        }
    }
    // 配置CMakeLists.txt路径
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"//编译后so文件的名字
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = ['src/main/jni', 'src/main/jni/']
        }
    }
    buildTypes {
        release {
            // 不显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            //混淆
            minifyEnabled true
            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config

        }
        // 第一个马甲包
        hotel.initWith(buildTypes.release) // 以release的配置来初始化马甲包配置
        hotel {
            applicationIdSuffix ".hotel"
            // 修改马甲包的applicationId，马甲包的application将为com.liunian.majiabaotest.majiabaoOne，即在原来的applicationId后加上配置内容
            manifestPlaceholders = [APP_NAME: 'peephole_hotel'] // 配置马甲包的应用名称
            matchingFallbacks = ['release', 'debug']
        }

    }
    dexOptions {
        javaMaxHeapSize "4G"
    }
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    //马甲包配置
//    flavorDimensions "default"
//    productFlavors {
//        mysmartx {
//            applicationId "${APP_ID}"
//            dimension "default"
//        }
//        hotel {
//            applicationId "${PEEPHOLE_APP_ID}"
//            dimension "default"
////            applicationIdSuffix ".peephole_hotel"//马甲包appid后缀
////            manifestPlaceholders = [APP_NAME: '康佳安防',AUTHORITIES:'com.szjcyh.konka.fileprovider']
//        }
//    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    androidTestImplementation(rootProject.ext.dependencies.espresso, {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation rootProject.ext.dependencies.appcompatV7
    testImplementation 'junit:junit:4.12'
    implementation rootProject.ext.dependencies.recyclerview
    //转换器，请求结果转换成Model
    implementation rootProject.ext.dependencies.okhttp
    implementation rootProject.ext.dependencies.glide
    //    compile 'com.journeyapps:zxing-android-embedded:3.5.0'
    //配合Rxjava 使用
    implementation rootProject.ext.dependencies.butterknife
    annotationProcessor rootProject.ext.dependencies.butterknife_compiler
    implementation rootProject.ext.dependencies.gson
    implementation rootProject.ext.dependencies.multidex
    implementation rootProject.ext.dependencies.eventbus
    implementation rootProject.ext.dependencies.umeng_common
    implementation rootProject.ext.dependencies.umeng_analytics
    implementation rootProject.ext.dependencies.rxbinding
    implementation rootProject.ext.dependencies.adapter_helper
    implementation rootProject.ext.dependencies.http_logging
    //    implementation rootProject.ext.dependencies.progressbar
    //    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    //    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    compileOnly files('libs/classes-full-debug.jar')
    api project(':zxinglib')
    implementation files('libs/Msc.jar')
    implementation files('libs/Sunflower.jar')
    implementation project(':eaglelock')
//    implementation(name: 'ttlock-sdk-2.0', ext: 'aar')
    implementation project(':nimlib')
//    implementation project(':OpenCVLibrary320')
    implementation files('libs/BaiduLBS_Android.jar')
}
